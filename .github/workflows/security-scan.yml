name: Security Scan

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]
  schedule:
    - cron: '0 2 * * 1' # Weekly scan on Mondays

jobs:
  security:
    runs-on: ubuntu-latest
    name: Security Audit

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist --no-dev

    - name: Run Composer Security Audit
      run: composer audit --format=plain

    - name: Check for hardcoded secrets
      run: |
        echo "üîç Scanning for potential hardcoded credentials..."
        
        # Check for common secret patterns
        echo "Checking for API keys..."
        if grep -r -i "api[_-]key\s*=\s*['\"][^'\"]*['\"]" --include="*.php" --include="*.env*" . 2>/dev/null; then
          echo "‚ö†Ô∏è Potential API keys found!"
        else
          echo "‚úÖ No hardcoded API keys found"
        fi
        
        echo "Checking for passwords..."
        if grep -r -i "password\s*=\s*['\"][^'\"]*['\"]" --include="*.php" --exclude-dir=vendor . 2>/dev/null; then
          echo "‚ö†Ô∏è Potential hardcoded passwords found!"
        else
          echo "‚úÖ No hardcoded passwords found"
        fi
        
        echo "Checking for tokens..."
        if grep -r -i "token\s*=\s*['\"][^'\"]*['\"]" --include="*.php" --exclude-dir=vendor . 2>/dev/null; then
          echo "‚ö†Ô∏è Potential hardcoded tokens found!"
        else
          echo "‚úÖ No hardcoded tokens found"
        fi

    - name: Validate Laravel security configurations
      run: |
        echo "üîí Checking Laravel security configurations..."
        
        # Check for debug mode in production
        if grep -q "APP_DEBUG=true" .env.example; then
          echo "‚ö†Ô∏è APP_DEBUG should be false in production"
        else
          echo "‚úÖ APP_DEBUG configuration looks good"
        fi
        
        # Check for HTTPS settings
        if grep -q "FORCE_HTTPS=true\|SESSION_SECURE_COOKIE=true" .env.example; then
          echo "‚úÖ HTTPS security settings found"
        else
          echo "‚ÑπÔ∏è Consider adding HTTPS security settings for production"
        fi

    - name: Scan multitenant package
      run: |
        cd packages/kodikas/multitenant
        if [ -f "composer.json" ]; then
          echo "üè¢ Scanning multitenant package..."
          composer install --no-interaction --no-dev
          if [ -f "composer.lock" ]; then
            composer audit --format=plain
          fi
        fi
