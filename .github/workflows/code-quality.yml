name: Code Quality & Validation

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

jobs:
  code-style:
    runs-on: ubuntu-latest
    name: Code Style & Linting

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        tools: composer:v2

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist --no-progress

    - name: Run Laravel Pint (Code Style)
      run: |
        if [ -f "vendor/bin/pint" ]; then
          vendor/bin/pint --test -v
        else
          echo "Laravel Pint not found, skipping code style check"
        fi

    - name: Validate composer.json files
      run: |
        composer validate
        cd packages/kodikas/multitenant
        composer validate

    - name: Check PHP syntax
      run: find . -name "*.php" -not -path "./vendor/*" -not -path "./storage/*" | xargs -n 1 php -l

    - name: Run PHPStan (Static Analysis)
      run: |
        if [ -f "vendor/bin/phpstan" ]; then
          vendor/bin/phpstan analyse --memory-limit=2G
        else
          echo "PHPStan not found, installing..."
          composer require --dev phpstan/phpstan --no-interaction
          vendor/bin/phpstan analyse --memory-limit=2G --level=5 app/ packages/kodikas/multitenant/src/
        fi

  dependency-validation:
    runs-on: ubuntu-latest
    name: Dependency Validation

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

    - name: Validate Composer dependencies
      run: |
        composer validate --strict
        composer check-platform-reqs

    - name: Check for outdated packages
      run: composer outdated --direct --strict

    - name: Validate multitenant package dependencies
      run: |
        cd packages/kodikas/multitenant
        composer validate --strict
        composer install --no-interaction
        composer check-platform-reqs

  architecture-validation:
    runs-on: ubuntu-latest
    name: Architecture & Structure Validation

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist

    - name: Check Laravel structure
      run: |
        # Verificar estructura básica de Laravel
        test -f artisan || { echo "artisan file missing"; exit 1; }
        test -d app || { echo "app directory missing"; exit 1; }
        test -d config || { echo "config directory missing"; exit 1; }
        test -d database || { echo "database directory missing"; exit 1; }
        echo "✅ Laravel structure validated"

    - name: Check multitenant package structure
      run: |
        # Verificar estructura del paquete multitenant
        test -f packages/kodikas/multitenant/composer.json || { echo "Multitenant composer.json missing"; exit 1; }
        test -d packages/kodikas/multitenant/src || { echo "Multitenant src directory missing"; exit 1; }
        test -d packages/kodikas/multitenant/tests || { echo "Multitenant tests directory missing"; exit 1; }
        test -f packages/kodikas/multitenant/README.md || { echo "Multitenant README missing"; exit 1; }
        echo "✅ Multitenant package structure validated"

    - name: Validate namespace consistency
      run: |
        # Verificar que los namespaces sean consistentes
        grep -r "namespace Kodikas\\\\Multitenant" packages/kodikas/multitenant/src/ || { echo "Namespace inconsistency found"; exit 1; }
        echo "✅ Namespace consistency validated"
