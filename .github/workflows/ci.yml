name: CI/CD Pipeline

on:
  push:
    branches: [ develop, master, main ]
  pull_request:
    branches: [ develop, master, main ]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [8.2, 8.3]

    name: Tests (PHP ${{ matrix.php }})

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: xdebug

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ~/.composer/cache
        key: php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          php-${{ matrix.php }}-composer-

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Copy environment file
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Create database
      run: touch database/database.sqlite

    - name: Run database migrations
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan migrate --force

    - name: Run tests with coverage
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit --coverage-clover coverage.xml

    - name: Test multitenant package
      run: |
        cd packages/kodikas/multitenant
        if [ -f "composer.json" ]; then
          composer install --no-interaction --prefer-dist
          if [ -f "vendor/bin/phpunit" ]; then
            vendor/bin/phpunit
          fi
        fi

    - name: Upload coverage to Codecov
      if: matrix.php == '8.3'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ~/.composer/cache
        key: php-8.3-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          php-8.3-composer-

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist

    - name: Run Laravel Pint
      run: |
        if [ -f "vendor/bin/pint" ]; then
          vendor/bin/pint --test
        else
          echo "Laravel Pint not available, skipping code style check"
        fi

    - name: Validate composer.json
      run: composer validate --strict

    - name: Check for security vulnerabilities
      run: composer audit --format=plain

    - name: Static Analysis with PHPStan
      run: |
        if [ -f "vendor/bin/phpstan" ]; then
          vendor/bin/phpstan analyse --level=5 app packages/kodikas/multitenant/src
        else
          echo "PHPStan not available, consider adding it for static analysis"
        fi
