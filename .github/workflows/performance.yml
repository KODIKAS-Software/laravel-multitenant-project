name: Performance Tests

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]
  schedule:
    - cron: '0 4 * * 1' # Weekly performance check on Mondays
  workflow_dispatch:

jobs:
  performance:
    runs-on: ubuntu-latest
    name: Performance Validation

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ~/.composer/cache
        key: php-8.3-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          php-8.3-composer-

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Copy environment file
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Configure MySQL database
      run: |
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=laravel_test" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=root" >> .env

    - name: Run database migrations
      run: php artisan migrate --force

    - name: Seed database for performance testing
      run: |
        php artisan db:seed --force
        echo "🌱 Database seeded for performance testing"

    - name: Run performance tests
      run: |
        echo "🚀 Running performance tests..."
        
        # Test application boot time
        echo "⏱️ Testing application boot time..."
        time php artisan about
        
        # Test route loading
        echo "📍 Testing route loading performance..."
        time php artisan route:list > /dev/null
        
        # Test database query performance
        echo "🗃️ Testing database performance..."
        php artisan tinker --execute="
        \$start = microtime(true);
        \App\Models\User::count();
        \$end = microtime(true);
        echo 'User count query took: ' . round((\$end - \$start) * 1000, 2) . ' ms' . PHP_EOL;
        "

    - name: Test multitenant performance
      run: |
        cd packages/kodikas/multitenant
        if [ -f "composer.json" ]; then
          echo "🏢 Testing multitenant package performance..."
          composer install --no-interaction --prefer-dist
          
          # Test package loading time
          echo "📦 Testing package loading performance..."
          time php -r "require 'vendor/autoload.php'; echo 'Package autoload complete' . PHP_EOL;"
        fi

    - name: Memory usage analysis
      run: |
        echo "💾 Analyzing memory usage..."
        php -d memory_limit=128M artisan about | grep -i memory || true
        
        # Test memory usage with multitenant features
        php -d memory_limit=128M artisan tinker --execute="
        echo 'Peak memory usage: ' . number_format(memory_get_peak_usage(true) / 1024 / 1024, 2) . ' MB' . PHP_EOL;
        echo 'Current memory usage: ' . number_format(memory_get_usage(true) / 1024 / 1024, 2) . ' MB' . PHP_EOL;
        "

    - name: Cache performance test
      run: |
        echo "🗂️ Testing cache performance..."
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache
        
        echo "Testing cached application performance..."
        time php artisan about > /dev/null

    - name: Performance benchmark summary
      run: |
        echo "📊 Performance Test Summary"
        echo "=========================="
        echo "✅ Application boot time tested"
        echo "✅ Route loading performance verified" 
        echo "✅ Database query performance measured"
        echo "✅ Memory usage analyzed"
        echo "✅ Cache performance validated"
        echo "✅ Multitenant package performance checked"
        echo ""
        echo "🎯 Performance validation completed successfully!"